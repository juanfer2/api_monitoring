generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  @@map("users")
  id               Int               @id @default(autoincrement())
  username         String            @unique
  name             String?
  password         String?
  Projects  Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Project {
  @@map("projects")
  id     Int  @id @default(autoincrement())
  title             String?
  description             String?
  userId Int
  user   User @relation(fields: [userId], references: [id])
  requests Request[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Request {
  @@map("requests")
  id     Int  @id @default(autoincrement())
  title             String?
  description             String?
  projectId Int
  type String
  url String
  method String?
  project   Project @relation(fields: [projectId], references: [id])
  metrics Metric[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Metric {
  @@map("metrics")
  id      Int  @id @default(autoincrement())
  title   String?
  type    TypeRequests? @default(GRAHPQL)
  content String?
  metricId Int
  metric   Request @relation(fields: [metricId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum TypeRequests {
  GRAHPQL
  REST
}
